// Generated by view binder compiler. Do not edit!
package com.example.foodorderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodorderapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewholderListFoodBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView PriceTxt;

  @NonNull
  public final TextView RatingTxt;

  @NonNull
  public final TextView TimeTxt;

  @NonNull
  public final TextView TitleTxt;

  @NonNull
  public final ImageView imageView10;

  @NonNull
  public final ImageView imageView12;

  @NonNull
  public final ImageView img;

  @NonNull
  public final TextView textView9;

  private ViewholderListFoodBinding(@NonNull ConstraintLayout rootView, @NonNull TextView PriceTxt,
      @NonNull TextView RatingTxt, @NonNull TextView TimeTxt, @NonNull TextView TitleTxt,
      @NonNull ImageView imageView10, @NonNull ImageView imageView12, @NonNull ImageView img,
      @NonNull TextView textView9) {
    this.rootView = rootView;
    this.PriceTxt = PriceTxt;
    this.RatingTxt = RatingTxt;
    this.TimeTxt = TimeTxt;
    this.TitleTxt = TitleTxt;
    this.imageView10 = imageView10;
    this.imageView12 = imageView12;
    this.img = img;
    this.textView9 = textView9;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewholderListFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewholderListFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.viewholder_list_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewholderListFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.PriceTxt;
      TextView PriceTxt = ViewBindings.findChildViewById(rootView, id);
      if (PriceTxt == null) {
        break missingId;
      }

      id = R.id.RatingTxt;
      TextView RatingTxt = ViewBindings.findChildViewById(rootView, id);
      if (RatingTxt == null) {
        break missingId;
      }

      id = R.id.TimeTxt;
      TextView TimeTxt = ViewBindings.findChildViewById(rootView, id);
      if (TimeTxt == null) {
        break missingId;
      }

      id = R.id.TitleTxt;
      TextView TitleTxt = ViewBindings.findChildViewById(rootView, id);
      if (TitleTxt == null) {
        break missingId;
      }

      id = R.id.imageView10;
      ImageView imageView10 = ViewBindings.findChildViewById(rootView, id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.imageView12;
      ImageView imageView12 = ViewBindings.findChildViewById(rootView, id);
      if (imageView12 == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      return new ViewholderListFoodBinding((ConstraintLayout) rootView, PriceTxt, RatingTxt,
          TimeTxt, TitleTxt, imageView10, imageView12, img, textView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
